@using OnlineMall.Services.ShopServices
@using OnlineMall.Pages.Profiles
@inject ICrudService<ShopM> _shop
@inject IAuthService _auth
@inject ISnackbar _snack
@inject NavigationManager _nav




 <MudCard Elevation="5" class="card__" style="position: relative;">
                             <MudIconButton Icon="@Icons.Material.Outlined.Share" Style="position: absolute; margin: 0; top: 0px; right: 0px;"></MudIconButton>
                           <MudCardMedia Height="200" style="width: 100%;" Image="@Product.Image"   >
                              
                           </MudCardMedia>
                           <MudCardContent>
                              <div>
                                  <div class="container">
                                      <div class="row">
                                          <div class="col-8">
                                               <div class="text__wrap">
                                <MudText Typo="Typo.h6" class="text__">@Product.Name</MudText>
                                <MudText Typo="Typo.caption"  class="text__" >@Product.Description</MudText>
                                <MudText Typo="Typo.caption" Color="Color.Warning" >R @Product.Price</MudText>
                              
                                </div>
                                          </div>
                                          <div class="col-2">
                                               <MudIconButton class="nohoverborder" Icon="@Icons.Material.Outlined.AddShoppingCart" OnClick="OnAddCart"></MudIconButton>
                                          </div>
                                          <div class="col-2">
                                              <MudIconButton class="nohoverborder" Icon="@Icons.Material.Outlined.CompareArrows" OnClick="OnAddCompare"></MudIconButton>
                                          </div>
                                      </div>
                                  </div>

                              </div>

                           </MudCardContent>


                       </MudCard>

@code {

    [Parameter]
    public ProductM? Product { get; set; }





    async void OnAddCart()
    {
        var user = _auth.User;
        if(user != null)
        {
            if(user.Carts.Count != 0){
                var selectedDefaultType = user.Carts.FirstOrDefault(x => x.CartName == "Default");
                if(selectedDefaultType != null)
                {
                    var indexOF = user.Carts.IndexOf(selectedDefaultType);
                    if(indexOF != -1)
                    {
                        selectedDefaultType.ProductList.Add(Product);
                        user.Carts[indexOF] = selectedDefaultType;

                    }


                }


            }
            else
            {
                CartM newCart = new CartM()
                {
                   CartName = "Default",

                };
                newCart.ProductList.Add(Product);
                user.Carts.Add(newCart);
            }


            //Update 
            var response = await _auth.UpDateUser(user);

            if (response)
            {
                _snack.Add("Item Added ", Severity.Success);
            }
            else
            {
                _snack.Add("Item not added please Retry ", Severity.Warning);   
            }

        }
        else
        {
            _nav.NavigateTo("/auth", true);
        }
    }

    async void OnAddCompare()
    {
        CompareDB compare = new CompareDB();
        if((await compare.GetAllAsync()).Count <= 2)
        {
            var item = await compare.CreateAsync(Product);
            if (item)
            {
                _snack.Add("Added to compare list!",Severity.Success);
            }
        }
        else
        {
            _snack.Add("Reached compare free limit!",Severity.Warning);
        }
    }

}
