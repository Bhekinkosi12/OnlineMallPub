

@using OnlineMall.FirebaseDB
@inject ISnackbar _snack
@using System.ComponentModel.DataAnnotations
@inject ICrudService<ShopM> _shop
@inject IProductService _product

<div class="container">
    <div class="row">
        <div class="col-lg-4 offset-lg-4">
            <div class="he200 m-t-20">
                
                <img src="@_Image" style="height: 100%; width: 100%;" />
            </div>

             <h3 style="font-family: cursive; text-align: center; margin-top: 10px;">Select Image</h3>


             <div style="text-align: center; margin-top: 20px;">
                <label style="box-shadow: 0 2px 7px #4caf50; display: inline-flex; width: 150px; justify-content: space-around; border-radius: 2em; color: white; border: 2px solid; cursor: pointer; align-items: center; padding: 16px; background-color: #4caf50;" for="fileInput" >
                   Upload <MudIcon Icon="@Icons.Filled.CloudUpload" > </MudIcon>
                </label>
                <InputFile id="fileInput" OnChange="UploadF"  hidden multiple />
            </div>
           <div style="text-align: center;">
                            <MudProgressCircular Color="Color.Success" Indeterminate="@isProcess"  />
                                     </div>
                                     <br />




            <MudTextField T="string" @bind-Value="_Image" ></MudTextField>







             <div style="text-align: center; margin-top: 20px;">
                <label style="box-shadow: 0 2px 7px #4caf50; display: inline-flex; width: 150px; justify-content: space-around; border-radius: 2em; color: white; border: 2px solid; cursor: pointer; align-items: center; padding: 16px; background-color: #4caf50;" for="fileInput" >
                   Upload <MudIcon Icon="@Icons.Filled.CloudUpload" > </MudIcon>
                </label>
                <InputFile id="fileInput" OnChange="UploadF"  hidden multiple />
            </div>
           <div style="text-align: center;">
                            <MudProgressCircular Color="Color.Success" Indeterminate="@isProcess"  />
                                     </div>
                                     <br />






            <MudButton>Complete</MudButton>
        </div>

    </div>

</div>







@code {
   bool isProcess = false;
    public string _Image = "";
     StorageDB fstor = new StorageDB();

      private async void UploadF(InputFileChangeEventArgs e) {

        isProcess = true;
        StateHasChanged();

        var _file = e.GetMultipleFiles();

        try
        {



            if (_file != null)
            {



                var ite = _file[0].OpenReadStream();

                var st = await fstor.AddStoreStream(Guid.NewGuid().ToString(), Guid.NewGuid().ToString(), ite);



                if (st != null)
                {


                    _snack.Add("Photo Added To Database!", Severity.Success);
                    _Image = st;
                    StateHasChanged();
                }
                else {
                    _snack.Add("Please ReLoad The Image!", Severity.Error);
                }




            }
            else
            {
                _snack.Add("Invalid Selection!", Severity.Error);
            }

        }
        catch
        {
            _snack.Add("Unexpected Error!", Severity.Error);
        }
        finally
        {
            isProcess = false;
            StateHasChanged();
        }



    }


}
